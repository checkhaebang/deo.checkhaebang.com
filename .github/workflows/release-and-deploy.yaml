---
name: Release & Deploy
on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Archive production artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build
  release-and-deploy:
    if: github.event.pull_request.merged == true
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
      - name: Install dependencies
        run: npm install
      - name: Versioning & Create changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          VERSION=$(npm run version:next | tail -1)
          DESCRIPTION=$(npx standard-version --dry-run --silent | grep -v Done | grep -v "\-\-\-" | grep -v standard-version)
          RELEASE_DESCRIPTION=$DESCRIPTION
          RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION//'%'/'%25'}"
          RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION//$'\n'/'%0A'}"
          RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION//$'\r'/'%0D'}"
          
          SLACK_DESCRIPTION=$DESCRIPTION
          SLACK_DESCRIPTION="${SLACK_DESCRIPTION//'%'/%}"
          SLACK_DESCRIPTION="${SLACK_DESCRIPTION//$'\n'/\\n}"
          SLACK_DESCRIPTION="${SLACK_DESCRIPTION//$'\r'/\\n}"
          
          echo "::set-env name=RELEASE_DESCRIPTION::$RELEASE_DESCRIPTION"
          echo "::set-env name=SLACK_DESCRIPTION::$SLACK_DESCRIPTION"
          echo "::set-env name=VERSION::$VERSION"
          npx standard-version
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            ${{ env.RELEASE_DESCRIPTION }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v1.5.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          job_name: release notification
          status: custom
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          custom_payload: |
            {
              username: 'github',
              attachments: [
                {
                  author_name: 'Github Action'
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                  text: `*[Author]*\n${process.env.AS_AUTHOR}\n*[Version]*\nv${{ env.VERSION }}\n\n*[Description]*\n${{ env.SLACK_DESCRIPTION }}`
                  fields: [
                    {
                      title: 'workflow',
                      value: '${process.env.AS_WORKFLOW}',
                      short: true
                    },
                    {
                      title: 'repo',
                      value: '${process.env.AS_REPO}'
                      short: true
                    },
                    {
                      title: 'author',
                      value: '${process.env.AS_AUTHOR}',
                      short: true
                    },
                    {
                      title: 'version',
                      value: '${{ env.VERSION }}',
                      short: false
                    },
                    {
                      title: 'description',
                      value: ' ${{ env.SLACK_DESCRIPTION }}',
                      short: false
                    }
                  ]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
